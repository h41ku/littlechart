!function(t,e){if("object"==typeof exports&&"object"==typeof module)module.exports=e();else if("function"==typeof define&&define.amd)define([],e);else{var i=e();for(var o in i)("object"==typeof exports?exports:t)[o]=i[o]}}(self,(()=>(()=>{"use strict";var t={d:(e,i)=>{for(var o in i)t.o(i,o)&&!t.o(e,o)&&Object.defineProperty(e,o,{enumerable:!0,get:i[o]})},o:(t,e)=>Object.prototype.hasOwnProperty.call(t,e),r:t=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})}},e={};function i(t,e=.001){return Math.abs(t)<e}function o(t=0,e=0){return[t,e]}function n(t,e){return t[0]=e[0],t[1]=e[1],t}function s(t,e,i){return t[0]=e[0]*i[0],t[1]=e[1]*i[1],t}function l(t,e,i){return t[0]=e[0]/i[0],t[1]=e[1]/i[1],t}function r(t,e,i,o){return t[0]=e[0]*i[0]+o[0],t[1]=e[1]*i[1]+o[1],t}t.r(e),t.d(e,{Chart:()=>S,Dataset:()=>R});const a=t=>{t.preventDefault(),t.stopPropagation(),console.log("drop",t.type)},f="sim:pointerdown",c="sim:pointermove",h="sim:pointerup",u="sim:pointerzoom",d={listenerElement:null,invertMouseWheel:!1,mouseWheelStep:.1};class x{constructor(t,e={}){const i={...d,...e};this.element=t,this.listenerElement=null!==i.listenerElement?i.listenerElement:t;const o=(t,e)=>this.element.dispatchEvent(new CustomEvent(t,{detail:e})),n=(t,e,i)=>o(f,{originalEvent:t,clientX:e,clientY:i}),s=(t,e,i)=>o(h,{originalEvent:t,clientX:e,clientY:i}),l=(t,e,i,n)=>o(u,{originalEvent:t,clientX:e,clientY:i,deltaScale:n}),r=(t,e,i,n,s)=>o(c,{originalEvent:t,clientX:e,clientY:i,movementX:n,movementY:s});let a=null,x=null;const p={x:0,y:0},g={x:0,y:0},m=i.invertMouseWheel?-1:1,b=i.mouseWheelStep;this.listeners={touchstart:t=>{let e;const i=t.target.getBoundingClientRect();if(null!==a){const o=t.changedTouches[0];if(o.identifier!==a){let l;x=o.identifier,g.x=o.clientX-i.left,g.y=o.clientY-i.top,l=s(t,p.x,p.y),!1===l&&(e=!1),l=n(t,p.x+(g.x-p.x)/2,p.y+(g.y-p.y)/2),!1===l&&(e=!1)}}else{const o=t.changedTouches[0];let s;a=o.identifier,p.x=o.clientX-i.left,p.y=o.clientY-i.top,s=n(t,p.x,p.y),!1===s&&(e=!1)}return!1===e&&(t.stopPropagation(),t.preventDefault()),e},touchend:t=>{let e,i=Array.from(t.changedTouches);if(null!==a&&null!==x){const o=i.find((t=>a===t.identifier)),l=i.find((t=>x===t.identifier));let r;r=s(t,p.x+(g.x-p.x)/2,p.y+(g.y-p.y)/2),!1===r&&(e=!1),o&&l?(a=null,x=null):o&&!l?(a=x,p.x=g.x,p.y=g.y,x=null):!o&&l&&(x=null),null!==a&&(r=n(t,p.x,p.y),!1===r&&(e=!1))}else if(null!==a&&i.find((t=>a===t.identifier))){let i;a=null,i=s(t,p.x,p.y),!1===i&&(e=!1)}return!1===e&&(t.stopPropagation(),t.preventDefault()),e},touchmove:t=>{let e;const i=t.target.getBoundingClientRect();if(null!==a&&null!==x){const o={x:p.x,y:p.y},f={x:g.x,y:g.y},c=Array.from(t.changedTouches).find((t=>a===t.identifier)),h=Array.from(t.changedTouches).find((t=>x===t.identifier));c&&(o.x=c.clientX-i.left,o.y=c.clientY-i.top),h&&(f.x=h.clientX-i.left,f.y=h.clientY-i.top);const u=g.x-p.x,d=g.y-p.y,m=f.x-o.x,b=f.y-o.y,y=1-Math.hypot(u,d)/Math.hypot(m,b),v={x:p.x+u/2,y:p.y+d/2},L={x:o.x+m/2,y:o.y+b/2};let S;S=r(t,L.x,L.y,L.x-v.x,L.y-v.y),!1===S&&(e=!1),S=s(t,L.x,L.y),!1===S&&(e=!1),S=l(t,L.x,L.y,y),!1===S&&(e=!1),S=n(t,L.x,L.y),!1===S&&(e=!1),p.x=o.x,p.y=o.y,g.x=f.x,g.y=f.y}else if(null!==a){const o={x:p.x,y:p.y},n=Array.from(t.changedTouches).find((t=>a===t.identifier));if(!n)return;let s;o.x=n.clientX-i.left,o.y=n.clientY-i.top,s=r(t,o.x,o.y,o.x-p.x,o.y-p.y),!1===s&&(e=!1),p.x=o.x,p.y=o.y}return!1===e&&(t.stopPropagation(),t.preventDefault()),e},mousedown:t=>{p.x=t.clientX,p.y=t.clientY;let e=n(t,p.x,p.y);return!1===e&&(t.stopPropagation(),t.preventDefault()),e},mouseup:t=>{p.x=t.clientX,p.y=t.clientY;let e=s(t,p.x,p.y);return!1===e&&(t.stopPropagation(),t.preventDefault()),e},mousemove:t=>{let e={x:t.clientX,y:t.clientY},i=r(t,e.x,e.y,e.x-p.x,e.y-p.y);return p.x=e.x,p.y=e.y,!1===i&&(t.stopPropagation(),t.preventDefault()),i},wheel:t=>{const e=b*(t.deltaY>0?1:-1)*m,i=l(t,t.clientX,t.clientY,e);return!1===i&&(t.stopPropagation(),t.preventDefault()),i}}}enableNativeGestures(){document.removeEventListener("gesturestart",a),document.removeEventListener("gesturechange",a),document.removeEventListener("gestureend",a)}disableNativeGestures(){document.addEventListener("gesturestart",a),document.addEventListener("gesturechange",a),document.addEventListener("gestureend",a)}enableTouchGestures(){this.listenerElement.addEventListener("touchstart",this.listeners.touchstart),document.addEventListener("touchend",this.listeners.touchend),document.addEventListener("touchmove",this.listeners.touchmove)}disableTouchGestures(){this.listenerElement.removeEventListener("touchstart",this.listeners.touchstart),document.removeEventListener("touchend",this.listeners.touchend),document.removeEventListener("touchmove",this.listeners.touchmove)}enableMouseGestures(){this.listenerElement.addEventListener("mousedown",this.listeners.mousedown),document.addEventListener("mouseup",this.listeners.mouseup),document.addEventListener("mousemove",this.listeners.mousemove),this.listenerElement.addEventListener("wheel",this.listeners.wheel),document.addEventListener("mouseleave",this.listeners.mouseup)}disableMouseGestures(){this.listenerElement.removeEventListener("mousedown",this.listeners.mousedown),document.removeEventListener("mouseup",this.listeners.mouseup),document.removeEventListener("mousemove",this.listeners.mousemove),document.removeEventListener("wheel",this.listeners.wheel),document.removeEventListener("mouseleave",this.listeners.mouseup)}}x.EVT_NAME_POINTERDOWN=f,x.EVT_NAME_POINTERMOVE=c,x.EVT_NAME_POINTERUP=h,x.EVT_NAME_POINTERZOOM=u;const p=x;function g(t,e){const i={...t,...e};return Object.entries(e).forEach((({0:e,1:o})=>{e in t&&"object"==typeof o&&!(t=>t instanceof Array)(o)&&null!==o&&(i[e]=g(t[e],o))})),i}const m={focus:{points:{innerRadius:t=>2*t.options.lineWidth,outerRadius:t=>2*t.options.lineWidth+t.options.lineWidth},axes:{x:{color:"rgba(0,0,0,0.1)",lineWidth:1},y:{color:"rgba(0,0,0,0.1)",lineWidth:1}}},color:{border:"rgba(0,0,0,0)",background:"#000000",text:"#ffffff"},shadow:{offsetX:0,offsetY:15,blur:5,color:"rgba(0,0,0,0.2)"},borderRadius:{leftTop:5,rightTop:5,leftBottom:5,rightBottom:5},viewportPadding:{left:15,right:15,top:15,bottom:15},padding:{left:25,right:10,top:5,bottom:5},mark:{offsetLeft:15,offsetTop:15,innerRadius:0,outerRadius:3},unitInvisibleHints:!0,maxNumIterations:20},b={color:{border:"#eeeeee",background:"#ffffff",text:"#000000"},padding:{left:5,right:5,top:5,bottom:5},itemPadding:{left:25,right:10,top:5,bottom:5},mark:{offsetLeft:15,offsetTop:15,innerRadius:0,outerRadius:3}};function y(t,e){return t.bottom>e.top&&t.right>e.left&&t.top<e.bottom&&t.left<e.right}function v(t){const e=t.length;for(let i=0;i<e;i++)for(let o=0;o<e;o++)if(i!==o&&y(t[i].boundingRect,t[o].boundingRect))return!0;return!1}const L={xCanvasStep:25,yCanvasStep:25,xAxisStep:1,yAxisStep:1,xOffset:0,yOffset:0,xScale:1,yScale:1,xAxisSubdivisions:10,yAxisSubdivisions:10,lineWidth:1,pointSize:0,fontSize:15,fontFamily:"monospace",xAxisLabelXOffset:0,xAxisLabelYOffset:0,xAxisLabelDynamicPosition:!0,xAxisLabelSpacing:15,xAxisLabelFormat:t=>t.toFixed(4),xAxisLabelJoiningStep:5,xAxisLabelMarkOffset:-2,xAxisLabelMarkSize:4,xAxisLabelDisplayZero:!0,xAxisLabelEnable:!0,yAxisLabelXOffset:0,yAxisLabelYOffset:0,yAxisLabelDynamicPosition:!0,yAxisLabelSpacing:0,yAxisLabelFormat:t=>t.toFixed(4),yAxisLabelJoiningStep:5,yAxisLabelMarkOffset:-2,yAxisLabelMarkSize:4,yAxisLabelDisplayZero:!0,yAxisLabelEnable:!0,backgroundColor:"#ffffff",gridColor:"rgba(0,0,0,0.1)",axesColor:"rgba(0,0,0,0.5)",userTranslateX:!0,userTranslateY:!0,userScaleX:!0,userScaleY:!0,canvasRatio:1,canvasPixelRatio:1,clearFrame:!1,hints:{settings:{focus:{points:{innerRadius:t=>2*t.options.lineWidth,outerRadius:t=>2*t.options.lineWidth+t.options.lineWidth},axes:{x:{color:"rgba(0,0,0,0.1)",lineWidth:1},y:{color:"rgba(0,0,0,0.1)",lineWidth:1}}},color:{border:"rgba(0,0,0,0)",background:"#000000",text:"#ffffff"},shadow:{offsetX:0,offsetY:15,blur:5,color:"rgba(0,0,0,0.2)"},borderRadius:{leftTop:5,rightTop:5,leftBottom:5,rightBottom:5},viewportPadding:{left:15,right:15,top:15,bottom:15},padding:{left:25,right:10,top:5,bottom:5},mark:{offsetLeft:15,offsetTop:15,innerRadius:0,outerRadius:3},unitInvisibleHints:!0,maxNumIterations:20},hintText:(t,e,i,o)=>`X: ${o.xAxisLabelFormat(t)}\nY: ${o.yAxisLabelFormat(e)}`,createHints:function(t,e,i,n,s,l){const{fontFamily:r,fontSize:a}=s,{hintText:f,settings:c}=s.hints,h=g(m,c),{focus:u,borderRadius:d,padding:x,mark:p}=h,{innerRadius:b,outerRadius:y}=u.points,v=o(),{transform:L}=l,S=[],R=a*i.pixelRatio;t.font=`${R}px/1 ${r}`;for(let e=0,i=n.length;e<i;e++){const i=n[e],o=i.focusPoint;if(o){L(v,o);const e=f(o[0],o[1],i,s).split("\n");let n=0,l=0,r=0;for(let i=0,o=e.length;i<o;i++){const o=t.measureText(e[i]),a=o.width;n<a&&(n=a),l+=s.fontSize;const f=-Math.abs(o.actualBoundingBoxAscent),c=Math.abs(o.actualBoundingBoxDescent);r=s.fontSize-(c-f)}l+=x.top+x.bottom+r,n+=x.left+x.right;const a=v[0]+20,c=v[1]-l/2;S.push({focusPoints:[{x:v[0],y:v[1],innerRadius:b(i),outerRadius:y(i),dataset:i}],left:a,top:c,right:a+n,bottom:c+l,correction:r,texts:[{offsetLeft:x.left,offsetTop:x.top,contents:e}],padding:x,marks:[{...p,dataset:i}]})}}return L(v,e),{ctx:t,focus:{origin:e,x:v[0],y:v[1]},viewport:{...i,backgroundColor:s.backgroundColor},settings:g(h,{font:{family:r,size:a},borderRadius:d?[d.leftTop,d.rightTop,d.rightBottom,d.leftBottom]:null}),helpers:l,list:S}},displaceHints:t=>{const{list:e,settings:i,viewport:{width:o,height:n},helpers:{isIntersects:s}}=t,l=i.viewportPadding,r=l.left,a=o-l.right,f=l.top,c=n-l.bottom;let h=[...e].sort(((t,e)=>t.focusPoints[t.focusPoints.length-1].y-e.focusPoints[0].y)),u=!0,d=0;for(;u;){d++,u=!1;for(let t=0,e=h.length;t<e;t++){const i=h[t];if(null!==i){for(let o=t+1;o<e;o++){const t=h[o];if(null!==t&&s(i,t)){const e=i.bottom-i.top-i.padding.bottom-t.padding.top-t.padding.bottom;for(let i=0,o=t.texts.length;i<o;i++)t.texts[i].offsetTop+=e;for(let i=0,o=t.marks.length;i<o;i++)t.marks[i].offsetTop+=e;i.right=Math.max(i.right,i.left+(t.right-t.left)),i.bottom+=t.bottom-t.top-i.padding.bottom-t.padding.top-i.correction,i.texts=i.texts.concat(t.texts),i.focusPoints=i.focusPoints.concat(t.focusPoints),i.marks=i.marks.concat(t.marks),h[o]=null,u=!0}}h[t]=i}}if(!i.unitInvisibleHints)for(let t=0,e=h.length;t<e;t++){const e=h[t];null!==e&&(e.right<r||e.left>a||e.bottom<f||e.top>c)&&(h[t]=null,u=!0)}h=h.filter((t=>t));for(let t=0,e=h.length;t<e;t++){const e=h[t];if(e.left<r){const t=r-e.left;e.left+=t,e.right+=t,u=!0}else if(e.right>a){const t=e.right-a;e.left-=t,e.right-=t,u=!0}if(e.top<f){const t=f-e.top;e.top+=t,e.bottom+=t,u=!0}else if(e.bottom>c){const t=e.bottom-c;e.top-=t,e.bottom-=t,u=!0}}if(h.length<=1||d>=i.maxNumIterations)break}return{...t,list:h}},renderHints:t=>{const{ctx:e,list:i,settings:{font:o,color:n,shadow:s,borderRadius:l,focus:{axes:r}},viewport:{width:a,height:f,pixelRatio:c,backgroundColor:h}}=t;if(r.y){const{color:t,lineWidth:o}=r.y;e.fillStyle=t;for(let t=0,n=i.length;t<n;t++){const{focusPoints:n}=i[t];for(let t=0,i=n.length;t<i;t++){const{y:i}=n[t];e.fillRect(0,i,a,o*c)}}}if(r.x){const{color:i,lineWidth:o}=r.x;e.fillStyle=i,e.fillRect(t.focus.x,0,o*c,f)}if(s){const{offsetX:t,offsetY:o,blur:n,color:r}=s;e.fillStyle="rgb(255,255,255)",e.shadowColor=r,e.shadowOffsetX=t,e.shadowOffsetY=o,e.shadowBlur=n;for(let t=0,o=i.length;t<o;t++){const{left:o,top:n,right:s,bottom:r}=i[t];l?(e.beginPath(),e.roundRect(o,n,s-o,r-n,l),e.fill()):e.fillRect(o,n,s-o,r-n)}e.shadowColor="transparent"}for(let t=0,o=i.length;t<o;t++){const{focusPoints:o}=i[t];for(let t=0,i=o.length;t<i;t++){const{x:i,y:n,innerRadius:s,outerRadius:l,dataset:{options:{lineColor:r}}}=o[t];e.fillStyle=r.toString(),e.beginPath(),e.arc(i,n,l*c,0,2*Math.PI,!1),e.fill(),e.fillStyle=h,e.beginPath(),e.arc(i,n,s*c,0,2*Math.PI,!1),e.fill()}}const{border:u,background:d,text:x}=n,p=o.size*c;e.font=`${p}px/1 ${o.family}`;for(let t=0,n=i.length;t<n;t++){const{left:n,top:s,right:r,bottom:a,texts:f,marks:p}=i[t];e.strokeStyle=u,e.fillStyle=d,l?(e.beginPath(),e.roundRect(n,s,r-n,a-s,l),e.fill(),e.stroke()):e.fillRect(n,s,r-n,a-s),e.fillStyle=x;for(let t=0,i=f.length;t<i;t++){const{offsetLeft:i,offsetTop:l,contents:r}=f[t];let a=i+n,c=l+s;for(let t=0,i=r.length;t<i;t++)e.fillText(r[t],a,c+o.size),c+=o.size}for(let t=0,i=p.length;t<i;t++){const{offsetLeft:i,offsetTop:o,innerRadius:l,outerRadius:r,dataset:{options:{lineColor:a}}}=p[t],f=i+n,u=o+s;e.fillStyle=a.toString(),e.beginPath(),e.arc(f,u,r*c,0,2*Math.PI,!1),e.fill(),e.fillStyle=h,e.beginPath(),e.arc(f,u,l*c,0,2*Math.PI,!1),e.fill()}}}},legends:{settings:{color:{border:"#eeeeee",background:"#ffffff",text:"#000000"},padding:{left:5,right:5,top:5,bottom:5},itemPadding:{left:25,right:10,top:5,bottom:5},mark:{offsetLeft:15,offsetTop:15,innerRadius:0,outerRadius:3}},legendText:(t,e)=>`${t.legend}`,createLegends:function(t,e,i,o){const{legendText:n,settings:s}=o.legends,l=g(b,s),{itemPadding:r,padding:a,mark:f}=l,{fontFamily:c,fontSize:h}=o;let u=[],d=0,x=0;const p=h*e.pixelRatio;t.font=`${p}px/1 ${c}`;for(let e=0,s=i.length;e<s;e++){const s=i[e],l=n(s,o);if(l){const e=t.measureText(l),i=e.width+r.left+r.right,n=-Math.abs(e.actualBoundingBoxAscent),a=Math.abs(e.actualBoundingBoxDescent);x=Math.max(x,o.fontSize-(a-n)),u.push({text:{content:l,offsetLeft:r.left,offsetTop:r.top},mark:{...f},dataset:s,width:i,left:0,top:0}),d<i&&(d=i)}}const m=e.width-a.left-a.right,y=Math.floor(m/d);let v=0,L=0;const S=h+r.top+r.bottom+x;for(let t=0,e=u.length;t<e;t++){const e=u[t],i=t%y,o=Math.floor(t/y);v<i&&(v=i),L<o&&(L=o),e.left=i*d,e.top=o*S}const R=(L+1)*S+a.top+a.bottom,M=a.left+(m-(v+1)*d)/2,A=e.height-R+a.top;for(let t=0,e=u.length;t<e;t++){const e=u[t];e.left+=M,e.top+=A}return e.clip(0,0,e.width,e.height-R),{ctx:t,area:{left:0,right:e.width,top:e.height-R,bottom:e.height},viewport:{...e,backgroundColor:o.backgroundColor},settings:g(l,{font:{family:c,size:h}}),list:u}},renderLegends:function(t){const{ctx:e,area:i,settings:{font:o,color:n},viewport:{pixelRatio:s,backgroundColor:l},list:r}=t;if(n.background){const{left:t,top:o,right:l,bottom:r}=i;e.fillStyle=n.background,e.fillRect(t,o,l-t,r-o),n.border&&(e.fillStyle=n.border,e.fillRect(t,o,l-t,1*s))}const a=o.size*s;e.font=`${a}px/1 ${o.family}`;for(let t=0,i=r.length;t<i;t++){let{left:i,top:a,text:f,mark:c,dataset:{options:{lineColor:h}}}=r[t];e.fillStyle=n.text;{let{offsetLeft:t,offsetTop:n,content:s}=f;t+=i,n+=a,e.fillText(s,t,n+o.size)}{const{offsetLeft:t,offsetTop:o,innerRadius:n,outerRadius:r}=c,f=t+i,u=o+a;e.fillStyle=h.toString(),e.beginPath(),e.arc(f,u,r*s,0,2*Math.PI,!1),e.fill(),e.fillStyle=l,e.beginPath(),e.arc(f,u,n*s,0,2*Math.PI,!1),e.fill()}}}},cursorPointer:"pointer",cursorGrabbing:"grabbing",bindEventHandlers:!0,invertMouseWheel:!1,mouseWheelStep:.1},S=class{constructor(t,e={}){this.options=e=g(L,e),this.elCanvas=t,this.ctx=t.getContext("2d"),this.scale=o(e.xScale,e.yScale),this.translate=o(e.xOffset,e.yOffset),this.focusPoint=o(0,0),this.datasets=[],t.style.cursor=e.cursorPointer;const i={down:!1,pt0:o(0,0),pt:o(0,0),delta:o(0,0)},r=(i,o)=>{const{clientX:n,clientY:s}=o,{left:l,right:r,top:a,bottom:f}=t.getBoundingClientRect();return i[0]=(n-l)/e.canvasRatio,i[1]=(s-a)/e.canvasRatio,l<=n&&n<=r&&a<=s&&s<=f};this.isListening=!1,this.listeners={},this.listeners[p.EVT_NAME_POINTERDOWN]=o=>{t.style.cursor=e.cursorGrabbing,o.detail.originalEvent.preventDefault(),i.down=!0,r(i.pt0,o.detail)},this.listeners[p.EVT_NAME_POINTERUP]=o=>{i.down=!1,t.style.cursor=e.cursorPointer},this.listeners[p.EVT_NAME_POINTERMOVE]=t=>{const a=r(i.pt,t.detail);if(i.down){f=i.delta,c=i.pt,h=i.pt0,f[0]=c[0]-h[0],f[1]=c[1]-h[1],n(i.pt0,i.pt);const t=o(e.userTranslateX?i.delta[0]:0,e.userTranslateY?i.delta[1]:0);this.move(t),this.repaint()}else if(a){const t=o();!function(t,e,i,o){t[0]=(e[0]-o[0])/i[0],t[1]=(e[1]-o[1])/i[1]}(t,i.pt,o(e.xCanvasStep,e.yCanvasStep),this.translate),t[1]=-t[1],s(t,t,o(e.xAxisStep,e.yAxisStep)),l(t,t,this.scale),this.computeFocusPoints(t),this.repaint()}var f,c,h},this.listeners[p.EVT_NAME_POINTERZOOM]=t=>{t.detail.originalEvent.preventDefault();const n=t.detail.deltaScale,s=o(e.userScaleX?n:0,e.userScaleY?n:0);r(i.pt,t.detail),this.zoomAroundPoint(s,i.pt),this.repaint()},this.touchGestures=new p(t,{invertMouseWheel:e.invertMouseWheel,mouseWheelStep:e.mouseWheelStep}),e.bindEventHandlers&&this.bind()}computeFocusPoints(t){this.datasets.forEach((e=>{const i=e.points,n=((t,e,o,n)=>{let s=-1;for(;e<=o;){let t=e+Math.floor((o-e+1)/2),l=i[t][0];l<n?(s=t,e=t+1):(l>n||l===n)&&(o=t-1)}return s})(0,0,i.length-1,t[0]),s=n+1;if(n>=0&&s<i.length){const l=o(),r=i[n],a=i[s],f=(t[0]-r[0])/(a[0]-r[0]);!function(t,e,i,o){t[0]=e[0]+o[0]*(i[0]-e[0]),t[1]=e[1]+o[1]*(i[1]-e[1])}(l,r,a,o(f,e.options.isStepped?0:f)),e.focusPoint=l}else e.focusPoint=null})),n(this.focusPoint,t)}bind(){if(!this.isListening){for(let t in this.listeners)this.elCanvas.addEventListener(t,this.listeners[t]);this.touchGestures.enableTouchGestures(),this.touchGestures.enableMouseGestures(),this.isListening=!0}}unbind(){if(this.isListening){for(let t in this.listeners)this.elCanvas.removeEventListener(t,this.listeners[t]);this.touchGestures.disableTouchGestures(),this.touchGestures.disableMouseGestures(),this.isListening=!1}}fitView(t,e=!0){let i=this.elCanvas.width,n=this.elCanvas.height;if(i<=0||n<=0||Math.abs(t.width)<=0||Math.abs(t.height)<=0)return!1;const s=new DOMRect(t.x,-t.y-t.height,t.width,t.height),l=this.options,r=l.canvasRatio*l.canvasPixelRatio,a=o(l.xCanvasStep,l.yCanvasStep),f=o(l.xAxisStep,l.yAxisStep);if(i=i/r/a[0]*f[0],n=n/r/a[1]*f[1],this.scale[0]=i/s.width,this.scale[1]=n/s.height,e&&(this.scale[1]>this.scale[0]?this.scale[1]=this.scale[0]:this.scale[0]=this.scale[1]),this.translate[0]=-s.x/f[0]*a[0]*this.scale[0],this.translate[1]=-s.y/f[1]*a[1]*this.scale[1],e){const t=(i/this.scale[0]-s.width)/2,e=(n/this.scale[1]-s.height)/2;this.translate[0]+=t*a[0]*this.scale[0]/f[0],this.translate[1]+=e*a[1]*this.scale[1]/f[1]}return!0}fitViewAuto(t=!0){this.fitView(this.getBoundingRect(null,0,null,0),t),this.repaint()}getBoundingRect(t=null,e=null,i=null,o=null){let n=t,s=i,l=e,r=o;for(let t=0,e=this.datasets.length;t<e;t++)for(let e=0,i=this.datasets[t].points,o=i.length;e<o;e++){const[t,o]=i[e];(null===n||n>t)&&(n=t),(null===s||s<t)&&(s=t),(null===l||l>o)&&(l=o),(null===r||r<o)&&(r=o)}const a=new DOMRect(n,l,s-n,r-l);return a.minX=n,a.minY=l,a.maxX=s,a.maxY=r,a}move(t){var e,i,o;e=this.translate,i=this.translate,o=t,e[0]=i[0]+o[0],e[1]=i[1]+o[1]}zoomAroundPoint(t,e){const i=this.translate,o=this.scale;!function(t,e,i,o){t[0]=e[0]-o[0]*(i[0]-e[0]),t[1]=e[1]-o[1]*(i[1]-e[1])}(i,i,e,t),r(o,o,t,o)}repaint(){let t,e;const n=this.options,a=this.ctx;let f=this.elCanvas.width,c=this.elCanvas.height;const h=this.scale,u=this.datasets;if(f<=0||c<=0||0===h[0]||0===h[1])return;const d=n.canvasRatio*n.canvasPixelRatio,x=o(n.xCanvasStep*d,n.yCanvasStep*d),p=o(this.translate[0]*d,this.translate[1]*d),g=o(x[0]*h[0],x[1]*h[1]),m=o(n.xAxisStep,n.yAxisStep),b=o(1,1),L=o(n.xAxisSubdivisions,n.yAxisSubdivisions);for(;g[0]>x[0]*L[0];)g[0]/=L[0],b[0]/=L[0];for(;g[1]>x[1]*L[1];)g[1]/=L[1],b[1]/=L[1];for(;g[0]<x[0];)g[0]*=L[0],b[0]*=L[0];for(;g[1]<x[1];)g[1]*=L[1],b[1]*=L[1];const S=p[0]-(Math.floor(p[0]/g[0])+(p[0]>0?1:0))*g[0],R=p[1]-(Math.floor(p[1]/g[1])+(p[1]>0?1:0))*g[1],M=(t,e)=>{s(t,e,x),l(t,t,m),t[1]=-t[1],r(t,t,h,p)},A=o();n.clearFrame&&a.clearRect(0,0,f,c),a.fillStyle=n.backgroundColor,a.fillRect(0,0,f,c);let E=null;if(n.legends){const{createLegends:t,renderLegends:e}=n.legends;e(t(a,{width:f,height:c,pixelRatio:d,clip(t,e,i,o){f=i-t,c=o-e,E=new Path2D,E.rect(t,e,f,c)}},u,n,{isIntersects:y}))}E&&(a.save(),a.clip(E)),a.fillStyle=n.gridColor;for(let t=S;t<=f;t+=g[0])a.fillRect(t,0,1*d,c);for(let t=R;t<=c;t+=g[1])a.fillRect(0,t,f,1*d);a.fillStyle=n.axesColor,a.fillRect(p[0],0,1*d,c),a.fillRect(0,p[1],f,1*d);for(let t=0,i=u.length;t<i;t++){const i=u[t],o=i.points,n=o.length;if(n>1){if(a.strokeStyle=i.options.lineColor,a.lineWidth=i.options.lineWidth*d,a.beginPath(),M(A,o[0]),a.moveTo(A[0],A[1]),i.options.isStepped){e=A[1];for(let t=1;t<n;t++)M(A,o[t]),a.lineTo(A[0],e),a.lineTo(A[0],A[1]),e=A[1]}else for(let t=1;t<n;t++)M(A,o[t]),a.lineTo(A[0],A[1]);if(a.stroke(),i.options.pointRadius>0){a.fillStyle=i.options.lineColor;const t=i.options.pointRadius,e=2*Math.PI;M(A,o[0]),a.beginPath(),a.arc(A[0],A[1],t,0,e,!1),a.fill();for(let i=1;i<n;i++)M(A,o[i]),a.beginPath(),a.arc(A[0],A[1],t,0,e,!1),a.fill()}}}if(n.xAxisLabelEnable||n.yAxisLabelEnable){const o=n.fontSize*d;if(a.font=`${o}px/1 ${n.fontFamily}`,a.fillStyle=n.axesColor,n.xAxisLabelEnable){const t=n.xAxisLabelXOffset*d,s=n.xAxisLabelYOffset*d,l=n.xAxisLabelMarkOffset*d,r=n.xAxisLabelMarkSize*d,h=n.xAxisLabelSpacing*d,u=h/2;let x=[],y=!1,L=!1;for(let e=S;e<=f;e+=g[0]){const i=e-p[0],l=Math.round(i/g[0]),r=l*b[0]*m[0],f=n.xAxisLabelFormat(r),h=a.measureText(f),u={i:l,gridX:e,text:f,textMetrics:h,x:e-h.width/2+t,y:p[1]+o+s};x.push(u),u.y-o-s<0&&(y=!0),u.y+s>c&&(L=!0)}for(let t=0,i=x.length;t<i;t++){const i=x[t];e=i.y,n.xAxisLabelDynamicPosition&&(e=y?o+s:L?c-s:e);const l=new DOMRect(i.x-u,e-o,i.textMetrics.width+h,o);i.y=e,i.boundingRect=l}let R=n.xAxisLabelJoiningStep,M=x;for(;v(x);)x=M.filter((t=>i(Math.abs(t.i)%R))),R+=n.xAxisLabelJoiningStep;for(let t=0,e=x.length;t<e;t++){const e=x[t];(n.xAxisLabelDisplayZero||0!==e.i)&&(a.fillRect(e.gridX,p[1]+l,d,r),a.fillText(e.text,e.x,e.y))}}if(n.yAxisLabelEnable){const e=n.yAxisLabelXOffset*d,s=n.yAxisLabelYOffset*d,l=n.yAxisLabelMarkOffset*d,r=n.yAxisLabelMarkSize*d,h=n.yAxisLabelSpacing*d,u=h/2;let x=[],y=0,L=!1,S=!1;for(let t=R;t<=c;t+=g[1]){const i=p[1]-t,l=Math.round(i/g[1]),r=l*b[1]*m[1],c=n.yAxisLabelFormat(r),h=a.measureText(c),u={i:l,gridY:t,text:c,textMetrics:h,x:p[0]-h.width+e,y:t+o/2+s};x.push(u),y<h.width&&(y=h.width),u.x+e<0&&(L=!0),u.x+u.textMetrics.width-e>f&&(S=!0)}for(let i=0,s=x.length;i<s;i++){const s=x[i];t=s.x,n.yAxisLabelDynamicPosition&&(t=L?y-s.textMetrics.width-e:S?f-s.textMetrics.width+e:t);const l=new DOMRect(t,s.y-o-u,s.textMetrics.width,o+h);s.x=t,s.boundingRect=l}let M=n.yAxisLabelJoiningStep,A=x;for(;v(x);)x=A.filter((t=>i(Math.abs(t.i)%M))),M+=n.yAxisLabelJoiningStep;x=x.filter((t=>t.boundingRect.bottom>0&&t.boundingRect.top<c)),y=0,L=!1,S=!1;for(let t=0,i=x.length;t<i;t++){const i=x[t];i.x=p[0]-i.textMetrics.width+e,y<i.textMetrics.width&&(y=i.textMetrics.width),i.x+e<0&&(L=!0),i.x+i.textMetrics.width-e>f&&(S=!0)}for(let i=0,o=x.length;i<o;i++){const o=x[i];t=o.x,n.yAxisLabelDynamicPosition&&(t=L?y-o.textMetrics.width-e:S?f-o.textMetrics.width+e:t),o.x=t}for(let t=0,e=x.length;t<e;t++){const e=x[t];(n.yAxisLabelDisplayZero||0!==e.i)&&(a.fillRect(p[0]+l,e.gridY,r,d),a.fillText(e.text,e.x,e.y))}}}if(n.hints){const{createHints:t,displaceHints:e,renderHints:i}=n.hints;let o=t(a,this.focusPoint,{width:f,height:c,pixelRatio:d},u,n,{transform:M,isIntersects:y});o=e(o),i(o)}E&&a.restore()}},R=class{constructor(t="",e={}){if(!("lineColor"in e)){const t=()=>Math.round(256*Math.random());e.lineColor=`rgb(${t()},${t()},${t()})`}"isStepped"in e||(e.isStepped=!1),"lineWidth"in e||(e.lineWidth=1),"pointRadius"in e||(e.pointRadius=0),this.legend=t,this.options=e,this.points=[]}getBoundingRect(){let t=null,e=null,i=null,o=null;for(let n=0,s=this.points,l=s.length;n<l;n++){const[l,r]=s[n];(null===t||t>l)&&(t=l),(null===e||e<l)&&(e=l),(null===i||i>r)&&(i=r),(null===o||o<r)&&(o=r)}const n=new DOMRect(t,i,e-t,o-i);return n.minX=t,n.minY=i,n.maxX=e,n.maxY=o,n}};return e})()));